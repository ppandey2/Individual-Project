<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0404.1406                               -->
<workbook source-build='10.5.3 (10500.18.0404.1406)' source-platform='win' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='IndividualProject-USAsGunViolenceProblem' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Dataviz_Graphs' inline='true' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dataviz_Graphs' name='textscan.0o7utl900ubsxy1b3uqnn115bhgz'>
            <connection class='textscan' directory='D:/Spring_Quarter3/68283 MS Information Systems 2629DashbdsScorecrdsand Visual/Individual project/First_version_submission0.1' filename='Dataviz_Graphs.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Dataviz_Graphs (2)' name='textscan.1fopepo10aqm3j1g7i7bd1qm4gq7'>
            <connection class='textscan' directory='D:/Spring_Quarter3/68283 MS Information Systems 2629DashbdsScorecrdsand Visual/Individual project/First_version_submission0.1' filename='Dataviz_Graphs.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Dataviz_Graphs.csv].[Average total all civilian firearms]' />
                <expression op='[Dataviz_Graphs.csv2].[Average total all civilian firearms]' />
              </expression>
              <expression op='='>
                <expression op='[Dataviz_Graphs.csv1].[Average total all civilian firearms]' />
                <expression op='[Dataviz_Graphs.csv2].[Average total all civilian firearms]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Dataviz_Graphs.csv].[% of homicides by firearm]' />
                <expression op='[Dataviz_Graphs.csv1].[% of homicides by firearm]' />
              </expression>
            </clause>
            <relation connection='textscan.0o7utl900ubsxy1b3uqnn115bhgz' name='Dataviz_Graphs.csv' table='[Dataviz_Graphs#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Country' ordinal='0' />
                <column datatype='string' name='ISO code' ordinal='1' />
                <column datatype='string' name='Source' ordinal='2' />
                <column datatype='real' name='% of homicides by firearm' ordinal='3' />
                <column datatype='integer' name='Number of homicides by firearm' ordinal='4' />
                <column datatype='real' name='Homicide by firearm rate per 100,000 pop' ordinal='5' />
                <column datatype='integer' name='Rank by rate of ownership' ordinal='6' />
                <column datatype='real' name='Average firearms per 100 people' ordinal='7' />
                <column datatype='integer' name='Average total all civilian firearms' ordinal='8' />
                <column datatype='real' name='Population_per_thousand' ordinal='9' />
              </columns>
            </relation>
            <relation connection='textscan.1fopepo10aqm3j1g7i7bd1qm4gq7' name='Dataviz_Graphs.csv1' table='[Dataviz_Graphs#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Country' ordinal='0' />
                <column datatype='string' name='ISO code' ordinal='1' />
                <column datatype='string' name='Source' ordinal='2' />
                <column datatype='real' name='% of homicides by firearm' ordinal='3' />
                <column datatype='integer' name='Number of homicides by firearm' ordinal='4' />
                <column datatype='real' name='Homicide by firearm rate per 100,000 pop' ordinal='5' />
                <column datatype='integer' name='Rank by rate of ownership' ordinal='6' />
                <column datatype='real' name='Average firearms per 100 people' ordinal='7' />
                <column datatype='integer' name='Average total all civilian firearms' ordinal='8' />
                <column datatype='real' name='Population_per_thousand' ordinal='9' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1fopepo10aqm3j1g7i7bd1qm4gq7' name='Dataviz_Graphs.csv2' table='[Dataviz_Graphs#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='ISO code' ordinal='1' />
              <column datatype='string' name='Source' ordinal='2' />
              <column datatype='real' name='% of homicides by firearm' ordinal='3' />
              <column datatype='integer' name='Number of homicides by firearm' ordinal='4' />
              <column datatype='real' name='Homicide by firearm rate per 100,000 pop' ordinal='5' />
              <column datatype='integer' name='Rank by rate of ownership' ordinal='6' />
              <column datatype='real' name='Average firearms per 100 people' ordinal='7' />
              <column datatype='integer' name='Average total all civilian firearms' ordinal='8' />
              <column datatype='real' name='Population_per_thousand' ordinal='9' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[% of homicides by firearm (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[% of homicides by firearm]' />
          <map key='[% of homicides by firearm (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[% of homicides by firearm]' />
          <map key='[% of homicides by firearm]' value='[Dataviz_Graphs.csv].[% of homicides by firearm]' />
          <map key='[Average firearms per 100 people (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[Average firearms per 100 people]' />
          <map key='[Average firearms per 100 people (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Average firearms per 100 people]' />
          <map key='[Average firearms per 100 people]' value='[Dataviz_Graphs.csv].[Average firearms per 100 people]' />
          <map key='[Average total all civilian firearms (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[Average total all civilian firearms]' />
          <map key='[Average total all civilian firearms (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Average total all civilian firearms]' />
          <map key='[Average total all civilian firearms]' value='[Dataviz_Graphs.csv].[Average total all civilian firearms]' />
          <map key='[Country (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[Country]' />
          <map key='[Country (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Country]' />
          <map key='[Country]' value='[Dataviz_Graphs.csv].[Country]' />
          <map key='[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[Homicide by firearm rate per 100,000 pop]' />
          <map key='[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Homicide by firearm rate per 100,000 pop]' />
          <map key='[Homicide by firearm rate per 100,000 pop]' value='[Dataviz_Graphs.csv].[Homicide by firearm rate per 100,000 pop]' />
          <map key='[ISO code (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[ISO code]' />
          <map key='[ISO code (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[ISO code]' />
          <map key='[ISO code]' value='[Dataviz_Graphs.csv].[ISO code]' />
          <map key='[Number of homicides by firearm (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[Number of homicides by firearm]' />
          <map key='[Number of homicides by firearm (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Number of homicides by firearm]' />
          <map key='[Number of homicides by firearm]' value='[Dataviz_Graphs.csv].[Number of homicides by firearm]' />
          <map key='[Population_per_thousand (Dataviz_Graphs.csv)]' value='[Dataviz_Graphs.csv].[Population_per_thousand]' />
          <map key='[Population_per_thousand (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Population_per_thousand]' />
          <map key='[Population_per_thousand]' value='[Dataviz_Graphs.csv1].[Population_per_thousand]' />
          <map key='[Rank by rate of ownership (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[Rank by rate of ownership]' />
          <map key='[Rank by rate of ownership (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Rank by rate of ownership]' />
          <map key='[Rank by rate of ownership]' value='[Dataviz_Graphs.csv].[Rank by rate of ownership]' />
          <map key='[Source (Dataviz_Graphs.csv1)]' value='[Dataviz_Graphs.csv1].[Source]' />
          <map key='[Source (Dataviz_Graphs.csv2)]' value='[Dataviz_Graphs.csv2].[Source]' />
          <map key='[Source]' value='[Dataviz_Graphs.csv].[Source]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO code]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>ISO code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of homicides by firearm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of homicides by firearm]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>% of homicides by firearm</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of homicides by firearm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of homicides by firearm]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Number of homicides by firearm</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Homicide by firearm rate per 100,000 pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Homicide by firearm rate per 100,000 pop]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Homicide by firearm rate per 100,000 pop</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank by rate of ownership</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank by rate of ownership]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Rank by rate of ownership</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average firearms per 100 people</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average firearms per 100 people]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Average firearms per 100 people</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average total all civilian firearms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average total all civilian firearms]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Average total all civilian firearms</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_per_thousand (Dataviz_Graphs.csv)]</local-name>
            <parent-name>[Dataviz_Graphs.csv]</parent-name>
            <remote-alias>Population_per_thousand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO code (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>ISO code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of homicides by firearm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of homicides by firearm (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>% of homicides by firearm</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of homicides by firearm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of homicides by firearm (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Number of homicides by firearm</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Homicide by firearm rate per 100,000 pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Homicide by firearm rate per 100,000 pop</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank by rate of ownership</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank by rate of ownership (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Rank by rate of ownership</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average firearms per 100 people</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average firearms per 100 people (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Average firearms per 100 people</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average total all civilian firearms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average total all civilian firearms (Dataviz_Graphs.csv1)]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Average total all civilian firearms</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_per_thousand]</local-name>
            <parent-name>[Dataviz_Graphs.csv1]</parent-name>
            <remote-alias>Population_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO code (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>ISO code</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of homicides by firearm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of homicides by firearm (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>% of homicides by firearm</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of homicides by firearm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of homicides by firearm (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Number of homicides by firearm</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Homicide by firearm rate per 100,000 pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Homicide by firearm rate per 100,000 pop</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank by rate of ownership</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank by rate of ownership (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Rank by rate of ownership</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average firearms per 100 people</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average firearms per 100 people (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Average firearms per 100 people</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average total all civilian firearms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average total all civilian firearms (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Average total all civilian firearms</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_per_thousand (Dataviz_Graphs.csv2)]</local-name>
            <parent-name>[Dataviz_Graphs.csv2]</parent-name>
            <remote-alias>Population_per_thousand</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% of homicides by firearm (Dataviz Graphs.csv1)' datatype='real' name='[% of homicides by firearm (Dataviz_Graphs.csv1)]' role='measure' type='quantitative' />
      <column caption='% of homicides by firearm (Dataviz Graphs.csv2)' datatype='real' name='[% of homicides by firearm (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
      <column caption='% Of Homicides By Firearm' datatype='real' name='[% of homicides by firearm]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]&quot;' value='firearms possessed' />
          <alias key='&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]&quot;' value='rate of homicide' />
        </aliases>
      </column>
      <column caption='Average firearms per 100 people (Dataviz Graphs.csv1)' datatype='real' name='[Average firearms per 100 people (Dataviz_Graphs.csv1)]' role='measure' type='quantitative' />
      <column caption='Average firearms per 100 people (Dataviz Graphs.csv2)' datatype='real' name='[Average firearms per 100 people (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Average firearms per 100 people]' role='measure' type='quantitative' />
      <column caption='Average total all civilian firearms (Dataviz Graphs.csv1)' datatype='integer' name='[Average total all civilian firearms (Dataviz_Graphs.csv1)]' role='measure' type='quantitative' />
      <column caption='Average total all civilian firearms (Dataviz Graphs.csv2)' datatype='integer' name='[Average total all civilian firearms (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Average total all civilian firearms]' role='measure' type='quantitative' />
      <column caption='USA1' datatype='boolean' name='[Calculation_2091640620387835905]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Country]= &apos;United States&apos;' />
      </column>
      <column caption='Swit' datatype='boolean' name='[Calculation_2091640620549906434]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Country (Dataviz_Graphs.csv2)]=&apos;Switzerland&apos;' />
      </column>
      <column caption='israel' datatype='boolean' name='[Calculation_2091640620550643715]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Country (Dataviz_Graphs.csv2)]=&apos;Israel&apos;' />
      </column>
      <column caption='Country (Dataviz Graphs.csv1)' datatype='string' name='[Country (Dataviz_Graphs.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Dataviz Graphs.csv2)' datatype='string' name='[Country (Dataviz_Graphs.csv2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Homicide by firearm rate per 100,000 pop (Dataviz Graphs.csv1)' datatype='real' name='[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv1)]' role='measure' type='quantitative' />
      <column caption='Homicide by firearm rate per 100,000 pop (Dataviz Graphs.csv2)' datatype='real' name='[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Homicide by firearm rate per 100,000 pop]' role='measure' type='quantitative' />
      <column caption='ISO code (Dataviz Graphs.csv1)' datatype='string' name='[ISO code (Dataviz_Graphs.csv1)]' role='dimension' type='nominal' />
      <column caption='ISO code (Dataviz Graphs.csv2)' datatype='string' name='[ISO code (Dataviz_Graphs.csv2)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number of homicides by firearm (Dataviz Graphs.csv1)' datatype='integer' name='[Number of homicides by firearm (Dataviz_Graphs.csv1)]' role='measure' type='quantitative' />
      <column caption='Number of homicides by firearm (Dataviz Graphs.csv2)' datatype='integer' name='[Number of homicides by firearm (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
      <column caption='Population per thousand (Dataviz Graphs.csv2)' datatype='real' name='[Population_per_thousand (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
      <column caption='Population per thousand' datatype='real' name='[Population_per_thousand]' role='measure' type='quantitative' />
      <column caption='Rank by rate of ownership (Dataviz Graphs.csv1)' datatype='integer' name='[Rank by rate of ownership (Dataviz_Graphs.csv1)]' role='measure' type='quantitative' />
      <column caption='Rank by rate of ownership (Dataviz Graphs.csv2)' datatype='integer' name='[Rank by rate of ownership (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank by rate of ownership]' role='measure' type='quantitative' />
      <column caption='Source (Dataviz Graphs.csv1)' datatype='string' name='[Source (Dataviz_Graphs.csv1)]' role='dimension' type='nominal' />
      <column caption='Source (Dataviz Graphs.csv2)' datatype='string' name='[Source (Dataviz_Graphs.csv2)]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_2091640620387835905]' derivation='None' name='[none:Calculation_2091640620387835905:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2091640620550643715]' derivation='None' name='[none:Calculation_2091640620550643715:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Average firearms per 100 people]' derivation='Sum' name='[sum:Average firearms per 100 people:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average total all civilian firearms]' derivation='Sum' name='[sum:Average total all civilian firearms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Homicide by firearm rate per 100,000 pop]' derivation='Sum' name='[sum:Homicide by firearm rate per 100,000 pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank by rate of ownership]' derivation='Sum' name='[sum:Rank by rate of ownership:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Country,israel)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_2091640620550643715:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,USA1)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_2091640620387835905:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/Spring_Quarter3/68283 MS Information Systems 2629DashbdsScorecrdsand Visual/Individual project/First_version_submission0.1/Individual_project_data_extract.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[% of homicides by firearm (Dataviz_Graphs.csv1)]' value='[Extract].[% of homicides by firearm]' />
            <map key='[% of homicides by firearm (Dataviz_Graphs.csv2)]' value='[Extract].[% of homicides by firearm1]' />
            <map key='[% of homicides by firearm]' value='[Extract].[% of homicides by firearm2]' />
            <map key='[Average firearms per 100 people (Dataviz_Graphs.csv1)]' value='[Extract].[Average firearms per 100 people]' />
            <map key='[Average firearms per 100 people (Dataviz_Graphs.csv2)]' value='[Extract].[Average firearms per 100 people1]' />
            <map key='[Average firearms per 100 people]' value='[Extract].[Average firearms per 100 people2]' />
            <map key='[Average total all civilian firearms (Dataviz_Graphs.csv1)]' value='[Extract].[Average total all civilian firearms]' />
            <map key='[Average total all civilian firearms (Dataviz_Graphs.csv2)]' value='[Extract].[Average total all civilian firearms1]' />
            <map key='[Average total all civilian firearms]' value='[Extract].[Average total all civilian firearms2]' />
            <map key='[Country (Dataviz_Graphs.csv1)]' value='[Extract].[Country]' />
            <map key='[Country (Dataviz_Graphs.csv2)]' value='[Extract].[Country1]' />
            <map key='[Country]' value='[Extract].[Country2]' />
            <map key='[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv1)]' value='[Extract].[Homicide by firearm rate per 100,000 pop]' />
            <map key='[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv2)]' value='[Extract].[Homicide by firearm rate per 100,000 pop1]' />
            <map key='[Homicide by firearm rate per 100,000 pop]' value='[Extract].[Homicide by firearm rate per 100,000 pop2]' />
            <map key='[ISO code (Dataviz_Graphs.csv1)]' value='[Extract].[ISO code]' />
            <map key='[ISO code (Dataviz_Graphs.csv2)]' value='[Extract].[ISO code1]' />
            <map key='[ISO code]' value='[Extract].[ISO code2]' />
            <map key='[Number of homicides by firearm (Dataviz_Graphs.csv1)]' value='[Extract].[Number of homicides by firearm]' />
            <map key='[Number of homicides by firearm (Dataviz_Graphs.csv2)]' value='[Extract].[Number of homicides by firearm1]' />
            <map key='[Number of homicides by firearm]' value='[Extract].[Number of homicides by firearm2]' />
            <map key='[Population_per_thousand (Dataviz_Graphs.csv2)]' value='[Extract].[Population_per_thousand]' />
            <map key='[Population_per_thousand]' value='[Extract].[Population_per_thousand1]' />
            <map key='[Rank by rate of ownership (Dataviz_Graphs.csv1)]' value='[Extract].[Rank by rate of ownership]' />
            <map key='[Rank by rate of ownership (Dataviz_Graphs.csv2)]' value='[Extract].[Rank by rate of ownership1]' />
            <map key='[Rank by rate of ownership]' value='[Extract].[Rank by rate of ownership2]' />
            <map key='[Source (Dataviz_Graphs.csv1)]' value='[Extract].[Source]' />
            <map key='[Source (Dataviz_Graphs.csv2)]' value='[Extract].[Source1]' />
            <map key='[Source]' value='[Extract].[Source2]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country2</remote-alias>
              <ordinal>0</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO code2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO code2</remote-alias>
              <ordinal>1</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Source2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Source2</remote-alias>
              <ordinal>2</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of homicides by firearm2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of homicides by firearm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of homicides by firearm2</remote-alias>
              <ordinal>3</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>129</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of homicides by firearm2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of homicides by firearm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of homicides by firearm2</remote-alias>
              <ordinal>4</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Homicide by firearm rate per 100,000 pop2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Homicide by firearm rate per 100,000 pop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Homicide by firearm rate per 100,000 pop2</remote-alias>
              <ordinal>5</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank by rate of ownership2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank by rate of ownership]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rank by rate of ownership2</remote-alias>
              <ordinal>6</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average firearms per 100 people2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average firearms per 100 people]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average firearms per 100 people2</remote-alias>
              <ordinal>7</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average total all civilian firearms2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Average total all civilian firearms]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average total all civilian firearms2</remote-alias>
              <ordinal>8</ordinal>
              <family>Dataviz_Graphs.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>9</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO code (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO code</remote-alias>
              <ordinal>10</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Source (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Source</remote-alias>
              <ordinal>11</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of homicides by firearm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of homicides by firearm (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of homicides by firearm</remote-alias>
              <ordinal>12</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>129</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of homicides by firearm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of homicides by firearm (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of homicides by firearm</remote-alias>
              <ordinal>13</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Homicide by firearm rate per 100,000 pop</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Homicide by firearm rate per 100,000 pop</remote-alias>
              <ordinal>14</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank by rate of ownership</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank by rate of ownership (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rank by rate of ownership</remote-alias>
              <ordinal>15</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average firearms per 100 people</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average firearms per 100 people (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average firearms per 100 people</remote-alias>
              <ordinal>16</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average total all civilian firearms</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Average total all civilian firearms (Dataviz_Graphs.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average total all civilian firearms</remote-alias>
              <ordinal>17</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population_per_thousand1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population_per_thousand1</remote-alias>
              <ordinal>18</ordinal>
              <family>Dataviz_Graphs.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country1</remote-alias>
              <ordinal>19</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>179</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO code (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO code1</remote-alias>
              <ordinal>20</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>179</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Source1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Source (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Source1</remote-alias>
              <ordinal>21</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of homicides by firearm1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of homicides by firearm (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of homicides by firearm1</remote-alias>
              <ordinal>22</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>131</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of homicides by firearm1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of homicides by firearm (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of homicides by firearm1</remote-alias>
              <ordinal>23</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Homicide by firearm rate per 100,000 pop1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Homicide by firearm rate per 100,000 pop (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Homicide by firearm rate per 100,000 pop1</remote-alias>
              <ordinal>24</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank by rate of ownership1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank by rate of ownership (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rank by rate of ownership1</remote-alias>
              <ordinal>25</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average firearms per 100 people1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average firearms per 100 people (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average firearms per 100 people1</remote-alias>
              <ordinal>26</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average total all civilian firearms1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Average total all civilian firearms (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average total all civilian firearms1</remote-alias>
              <ordinal>27</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population_per_thousand (Dataviz_Graphs.csv2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population_per_thousand</remote-alias>
              <ordinal>28</ordinal>
              <family>Dataviz_Graphs.csv2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>179</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.535831' measure-ordering='alphabetic' measure-percentage='0.464169' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2091640620387835905:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2091640620550643715:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#a04ca7'>
              <bucket>&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]&quot;</bucket>
            </map>
            <map to='#ffaa00'>
              <bucket>&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;England and Wales&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Dem Rep&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C™te d«Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Bank &amp; Gaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Deceptive 3 ' />
      <command command='tsc:brush'>
        <param name='field-captions' value='israel' />
        <param name='target' value='Deceptive 3 ' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Homicide rate per country showing USA' />
      <command command='tsc:brush'>
        <param name='field-captions' value='USA1' />
        <param name='target' value='Homicide rate per country showing USA' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Deceptive 2 '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Homicides vs Guns distribution&#10;See Gautemala and Colombia - &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column datatype='integer' name='[Average total all civilian firearms]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Homicide by firearm rate per 100,000 pop]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of homicides by firearm]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average total all civilian firearms]' derivation='Sum' name='[sum:Average total all civilian firearms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Homicide by firearm rate per 100,000 pop]' derivation='Sum' name='[sum:Homicide by firearm rate per 100,000 pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of homicides by firearm]' derivation='Sum' name='[sum:Number of homicides by firearm:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Dem Rep&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;England and Wales&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Scotland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
              <size column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Number of homicides by firearm:qk]' />
              <text column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
              <lod column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9230387210845947' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</rows>
        <cols>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Deceptive 2 Revised'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Rate of homicides vs Guns distribution&#10;(See Gautemala ,Jamaica, Colombia, El Salvador) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column datatype='real' name='[Average firearms per 100 people]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Average total all civilian firearms]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Homicide by firearm rate per 100,000 pop]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average firearms per 100 people]' derivation='Sum' name='[sum:Average firearms per 100 people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average total all civilian firearms]' derivation='Sum' name='[sum:Average total all civilian firearms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Homicide by firearm rate per 100,000 pop]' derivation='Sum' name='[sum:Homicide by firearm rate per 100,000 pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]&quot;</bucket>
              <bucket>&quot;[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Dem Rep&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;England and Wales&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Scotland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' direction='DESC' using='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]' />
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]' scope='cols' value='Firearms Possession ( per100)' />
            <format attr='subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' scope='cols' value='Firearm Homicide rate (per100K)' />
            <format attr='subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[Multiple Values]' scope='rows' value='Rate of Firearm and Homicides' />
            <format attr='subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[Multiple Values]' scope='rows' value='true' />
            <format attr='width' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[Multiple Values]' value='68' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names]' value='Firearms and Homicides'>
              <formatted-text>
                <run>Firearms and Homicides</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[Multiple Values]</rows>
        <cols>([federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk] / [federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Deceptive 2 for rich countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Homicides vs Guns distribution&#10;Rich Countries - &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column datatype='integer' name='[Average total all civilian firearms]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Homicide by firearm rate per 100,000 pop]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of homicides by firearm]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average total all civilian firearms]' derivation='Sum' name='[sum:Average total all civilian firearms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Homicide by firearm rate per 100,000 pop]' derivation='Sum' name='[sum:Homicide by firearm rate per 100,000 pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of homicides by firearm]' derivation='Sum' name='[sum:Number of homicides by firearm:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;England and Wales&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
              <size column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Number of homicides by firearm:qk]' />
              <text column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
              <lod column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9230387210845947' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</rows>
        <cols>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Deceptive 3 '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Population and Gun Possession - &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column datatype='integer' name='[Average total all civilian firearms]' role='measure' type='quantitative' />
            <column caption='israel' datatype='boolean' name='[Calculation_2091640620550643715]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Country (Dataviz_Graphs.csv2)]=&apos;Israel&apos;' />
            </column>
            <column caption='Country (Dataviz Graphs.csv2)' datatype='string' name='[Country (Dataviz_Graphs.csv2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Rank by rate of ownership]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2091640620550643715]' derivation='None' name='[none:Calculation_2091640620550643715:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average total all civilian firearms]' derivation='Sum' name='[sum:Average total all civilian firearms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank by rate of ownership]' derivation='Sum' name='[sum:Rank by rate of ownership:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620550643715:nk]' direction='DESC' using='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <sort class='computed' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' direction='ASC' using='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620550643715:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620550643715:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620550643715:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk] + [federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk])</rows>
        <cols>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Deceptive 3 - total pop'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Population of the countries of the world and gun ownership &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column caption='Average firearms per 100 people (Dataviz Graphs.csv2)' datatype='real' name='[Average firearms per 100 people (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Population per thousand (Dataviz Graphs.csv2)' datatype='real' name='[Population_per_thousand (Dataviz_Graphs.csv2)]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average firearms per 100 people (Dataviz_Graphs.csv2)]' derivation='Sum' name='[sum:Average firearms per 100 people (Dataviz_Graphs.csv2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population_per_thousand (Dataviz_Graphs.csv2)]' derivation='Sum' name='[sum:Population_per_thousand (Dataviz_Graphs.csv2):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Albania&quot;' function='range' level='[none:Country:nk]' to='&quot;Barbados&quot;' />
              <groupfilter from='&quot;Belgium&quot;' function='range' level='[none:Country:nk]' to='&quot;Colombia&quot;' />
              <groupfilter from='&quot;Costa Rica&quot;' function='range' level='[none:Country:nk]' to='&quot;Jamaica&quot;' />
              <groupfilter from='&quot;Jordan&quot;' function='range' level='[none:Country:nk]' to='&quot;Liberia&quot;' />
              <groupfilter from='&quot;Luxembourg&quot;' function='range' level='[none:Country:nk]' to='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter from='&quot;Singapore&quot;' function='range' level='[none:Country:nk]' to='&quot;Slovenia&quot;' />
              <groupfilter from='&quot;South Africa&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
              <size column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Population_per_thousand (Dataviz_Graphs.csv2):qk]' />
              <text column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
              <text column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people (Dataviz_Graphs.csv2):qk]' />
              <lod column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Population_per_thousand (Dataviz_Graphs.csv2):qk]</rows>
        <cols>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people (Dataviz_Graphs.csv2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Deceptive2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Homicides vs Guns &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column datatype='integer' name='[Average total all civilian firearms]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Homicide by firearm rate per 100,000 pop]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of homicides by firearm]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average total all civilian firearms]' derivation='Sum' name='[sum:Average total all civilian firearms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Homicide by firearm rate per 100,000 pop]' derivation='Sum' name='[sum:Homicide by firearm rate per 100,000 pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of homicides by firearm]' derivation='Sum' name='[sum:Number of homicides by firearm:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;East Timor&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
              <size column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Number of homicides by firearm:qk]' />
              <lod column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9230387210845947' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</rows>
        <cols>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average total all civilian firearms:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Homicide rate per country showing USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;  - Deceptive 1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column caption='USA1' datatype='boolean' name='[Calculation_2091640620387835905]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Country]= &apos;United States&apos;' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Homicide by firearm rate per 100,000 pop]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2091640620387835905]' derivation='None' name='[none:Calculation_2091640620387835905:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Homicide by firearm rate per 100,000 pop]' derivation='Sum' name='[sum:Homicide by firearm rate per 100,000 pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[Inclusions (Country,USA1)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_2091640620387835905:nk]' member='false' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahamas&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Dem Rep&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank &amp; Gaza&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_2091640620387835905:nk]' member='true' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Country:nk]' />
                <hierarchy name='[none:Calculation_2091640620387835905:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' />
          </filter>
          <sort class='manual' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;West Bank &amp; Gaza&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Congo, Dem Rep&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Northern Ireland&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;England and Wales&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Korea, South&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Scotland&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Korea, North&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;East Timor&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;C™te d«Ivoire&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[Inclusions (Country,USA1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='72' />
            <format attr='title' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' scope='rows' value='Homicide rate by firearm (per100k pop)' />
            <format attr='subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='N' />
            <format attr='font-weight' data-class='subtotal' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='bold' />
            <format attr='color' data-class='subtotal' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='#d37295' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620387835905:nk]' value='USA'>
              <formatted-text>
                <run>USA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620387835905:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</rows>
        <cols>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Homicides in developed countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Homicide - Country Wise  - Deceptive 1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column caption='USA1' datatype='boolean' name='[Calculation_2091640620387835905]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Country]= &apos;United States&apos;' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Homicide by firearm rate per 100,000 pop]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2091640620387835905]' derivation='None' name='[none:Calculation_2091640620387835905:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Homicide by firearm rate per 100,000 pop]' derivation='Sum' name='[sum:Homicide by firearm rate per 100,000 pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Korea, South&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' direction='ASC' using='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' />
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</column>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='196' />
            <format attr='tick-color' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='#f28e2b' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' value='#f9eee8' />
            <format attr='color' data-class='subtotal' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' value='#f28e2b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' value='#000000' />
            <format attr='text-orientation' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='0' />
            <format attr='text-format' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620387835905:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Homicide by firearm rate per 100,000 pop:qk]</rows>
        <cols>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Revision Dec-3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Firearm possession and their country wise gun possession rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataviz_Graphs' name='federated.07iitzt09aa6vw1fh53rb1erd7ux' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07iitzt09aa6vw1fh53rb1erd7ux'>
            <column datatype='real' name='[Average firearms per 100 people]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Rank by rate of ownership]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average firearms per 100 people]' derivation='Sum' name='[sum:Average firearms per 100 people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank by rate of ownership]' derivation='Sum' name='[sum:Rank by rate of ownership:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' direction='ASC' using='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]' />
          <filter class='quantitative' column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]' included-values='in-range'>
            <min>26.0</min>
            <max>91.400000000000006</max>
          </filter>
          <slices>
            <column>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]' scope='cols' value='Rank by rate of gun ownership' />
            <format attr='subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</rows>
        <cols>([federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Average firearms per 100 people:qk] + [federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Homicide'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Homicide - Country Wise Report</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='5' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='4' type='layout-basic' w='98400' x='800' y='6250' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='82000' id='6' name='Homicide rate per country showing USA' w='97200' x='1900' y='6125' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Homicide rate per country showing USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620387835905:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620387835905:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Homicides in developed countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='filter' />
            <card param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='highlighter' />
            <card pane-specification-id='5' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620387835905:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Homicide' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='Homicide rate per country showing USA'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Deceptive2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Number of homicides by firearm:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Deceptive 2 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Number of homicides by firearm:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Deceptive 2 Revised'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Deceptive 2 for rich countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Number of homicides by firearm:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Deceptive 3 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Calculation_2091640620550643715:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Revision Dec-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[:Measure Names]</field>
            <field>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]</field>
            <field>[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Rank by rate of ownership:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Deceptive 3 - total pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[none:Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.07iitzt09aa6vw1fh53rb1erd7ux].[sum:Population_per_thousand (Dataviz_Graphs.csv2):qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Deceptive 2 ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deceptive 2 Revised' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deceptive 2 for rich countries' width='192'>
      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
      7i/ocfcqYRIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Deceptive 3 ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deceptive 3 - total pop' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deceptive2' width='192'>
      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
      t9i5azUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Homicide rate per country showing USA' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revision Dec-3' width='192'>
      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
      af4/fe5D56cG4w8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
